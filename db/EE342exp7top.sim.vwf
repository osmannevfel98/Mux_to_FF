/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 2000.0;
	SIMULATION_TIME = 2000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 25.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("Clock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("RnW1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("RnW2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("RnW3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Sel1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Sel2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Sel3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("DioExt")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = BIDIR;
	PARENT = "";
}

SIGNAL("DioExt[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DioExt";
}

SIGNAL("DioExt[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DioExt";
}

SIGNAL("DioExt[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DioExt";
}

SIGNAL("DioExt[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DioExt";
}

SIGNAL("DioExt[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DioExt";
}

SIGNAL("DioExt[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DioExt";
}

SIGNAL("DioExt[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DioExt";
}

SIGNAL("DioExt[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DioExt";
}

SIGNAL("DioExt[0]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DioExt[1]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DioExt[2]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DioExt[3]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DioExt[4]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DioExt[5]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DioExt[6]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DioExt[7]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Reg8bit:R1|FFstore")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("Reg8bit:R1|FFstore[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R1|FFstore";
}

SIGNAL("Reg8bit:R1|FFstore[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R1|FFstore";
}

SIGNAL("Reg8bit:R1|FFstore[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R1|FFstore";
}

SIGNAL("Reg8bit:R1|FFstore[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R1|FFstore";
}

SIGNAL("Reg8bit:R1|FFstore[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R1|FFstore";
}

SIGNAL("Reg8bit:R1|FFstore[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R1|FFstore";
}

SIGNAL("Reg8bit:R1|FFstore[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R1|FFstore";
}

SIGNAL("Reg8bit:R1|FFstore[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R1|FFstore";
}

SIGNAL("Reg8bit:R2|FFstore")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("Reg8bit:R2|FFstore[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R2|FFstore";
}

SIGNAL("Reg8bit:R2|FFstore[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R2|FFstore";
}

SIGNAL("Reg8bit:R2|FFstore[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R2|FFstore";
}

SIGNAL("Reg8bit:R2|FFstore[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R2|FFstore";
}

SIGNAL("Reg8bit:R2|FFstore[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R2|FFstore";
}

SIGNAL("Reg8bit:R2|FFstore[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R2|FFstore";
}

SIGNAL("Reg8bit:R2|FFstore[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R2|FFstore";
}

SIGNAL("Reg8bit:R2|FFstore[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R2|FFstore";
}

SIGNAL("Reg8bit:R3|FFstore")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("Reg8bit:R3|FFstore[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R3|FFstore";
}

SIGNAL("Reg8bit:R3|FFstore[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R3|FFstore";
}

SIGNAL("Reg8bit:R3|FFstore[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R3|FFstore";
}

SIGNAL("Reg8bit:R3|FFstore[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R3|FFstore";
}

SIGNAL("Reg8bit:R3|FFstore[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R3|FFstore";
}

SIGNAL("Reg8bit:R3|FFstore[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R3|FFstore";
}

SIGNAL("Reg8bit:R3|FFstore[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R3|FFstore";
}

SIGNAL("Reg8bit:R3|FFstore[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R3|FFstore";
}

SIGNAL("RnWAcc")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("SelAcc")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Accumulator:Acc|FFstore")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("Accumulator:Acc|FFstore[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Accumulator:Acc|FFstore";
}

SIGNAL("Accumulator:Acc|FFstore[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Accumulator:Acc|FFstore";
}

SIGNAL("Accumulator:Acc|FFstore[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Accumulator:Acc|FFstore";
}

SIGNAL("Accumulator:Acc|FFstore[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Accumulator:Acc|FFstore";
}

SIGNAL("Accumulator:Acc|FFstore[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Accumulator:Acc|FFstore";
}

SIGNAL("Accumulator:Acc|FFstore[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Accumulator:Acc|FFstore";
}

SIGNAL("Accumulator:Acc|FFstore[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Accumulator:Acc|FFstore";
}

SIGNAL("Accumulator:Acc|FFstore[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Accumulator:Acc|FFstore";
}

SIGNAL("Accumulator:Acc|ResetEn")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

GROUP("DioExtOut")
{
	MEMBERS = "DioExt[0]~result", "DioExt[1]~result", "DioExt[2]~result", "DioExt[3]~result", "DioExt[4]~result", "DioExt[5]~result", "DioExt[6]~result", "DioExt[7]~result";
}

TRANSITION_LIST("Clock")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 20;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
	}
}

TRANSITION_LIST("RnW1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("RnW2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 325.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 1625.0;
	}
}

TRANSITION_LIST("RnW3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 425.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 1525.0;
	}
}

TRANSITION_LIST("Sel1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 550.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 1325.0;
	}
}

TRANSITION_LIST("Sel2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 125.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 1625.0;
	}
}

TRANSITION_LIST("Sel3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 225.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 1525.0;
	}
}

TRANSITION_LIST("DioExt[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 250.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 1425.0;
	}
}

TRANSITION_LIST("DioExt[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 250.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 1425.0;
	}
}

TRANSITION_LIST("DioExt[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 250.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 1425.0;
	}
}

TRANSITION_LIST("DioExt[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 250.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 1425.0;
	}
}

TRANSITION_LIST("DioExt[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 250.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 1425.0;
	}
}

TRANSITION_LIST("DioExt[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 250.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 1425.0;
	}
}

TRANSITION_LIST("DioExt[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 250.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 1425.0;
	}
}

TRANSITION_LIST("DioExt[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 250.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 1425.0;
	}
}

TRANSITION_LIST("DioExt[0]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 67.428;
		LEVEL 0 FOR 45.25;
		LEVEL Z FOR 53.6;
		LEVEL 1 FOR 46.557;
		LEVEL Z FOR 37.165;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 1425.0;
	}
}

TRANSITION_LIST("DioExt[1]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
		LEVEL Z FOR 67.94;
		LEVEL 1 FOR 45.085;
		LEVEL Z FOR 53.6;
		LEVEL 1 FOR 46.557;
		LEVEL Z FOR 36.818;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 1425.0;
	}
}

TRANSITION_LIST("DioExt[2]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 50.0;
			LEVEL Z FOR 50.0;
		}
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 67.69;
		LEVEL 0 FOR 45.085;
		LEVEL Z FOR 53.6;
		LEVEL 0 FOR 46.557;
		LEVEL Z FOR 37.068;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 1425.0;
	}
}

TRANSITION_LIST("DioExt[3]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 50.0;
			LEVEL Z FOR 50.0;
		}
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 67.68;
		LEVEL 0 FOR 45.085;
		LEVEL Z FOR 53.6;
		LEVEL 0 FOR 46.557;
		LEVEL Z FOR 37.078;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 1425.0;
	}
}

TRANSITION_LIST("DioExt[4]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 67.921;
		LEVEL 0 FOR 45.085;
		LEVEL Z FOR 53.6;
		LEVEL 1 FOR 46.557;
		LEVEL Z FOR 36.837;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 1425.0;
	}
}

TRANSITION_LIST("DioExt[5]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
		LEVEL Z FOR 67.94;
		LEVEL 1 FOR 45.085;
		LEVEL Z FOR 53.6;
		LEVEL 1 FOR 46.557;
		LEVEL Z FOR 36.818;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 1425.0;
	}
}

TRANSITION_LIST("DioExt[6]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 50.0;
			LEVEL Z FOR 50.0;
		}
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 68.269;
		LEVEL 0 FOR 45.085;
		LEVEL Z FOR 53.6;
		LEVEL 0 FOR 46.557;
		LEVEL Z FOR 36.489;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 1425.0;
	}
}

TRANSITION_LIST("DioExt[7]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 50.0;
			LEVEL Z FOR 50.0;
		}
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 67.69;
		LEVEL 0 FOR 45.085;
		LEVEL Z FOR 53.6;
		LEVEL 0 FOR 46.557;
		LEVEL Z FOR 37.068;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 1425.0;
	}
}

TRANSITION_LIST("Reg8bit:R1|FFstore[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 653.006;
		LEVEL X FOR 1346.994;
	}
}

TRANSITION_LIST("Reg8bit:R1|FFstore[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 653.006;
		LEVEL X FOR 1346.994;
	}
}

TRANSITION_LIST("Reg8bit:R1|FFstore[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 653.006;
		LEVEL X FOR 1346.994;
	}
}

TRANSITION_LIST("Reg8bit:R1|FFstore[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 53.006;
		LEVEL 1 FOR 600.0;
		LEVEL X FOR 1346.994;
	}
}

TRANSITION_LIST("Reg8bit:R1|FFstore[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 653.006;
		LEVEL X FOR 1346.994;
	}
}

TRANSITION_LIST("Reg8bit:R1|FFstore[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 653.006;
		LEVEL X FOR 1346.994;
	}
}

TRANSITION_LIST("Reg8bit:R1|FFstore[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 653.006;
		LEVEL X FOR 1346.994;
	}
}

TRANSITION_LIST("Reg8bit:R1|FFstore[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 53.006;
		LEVEL 1 FOR 600.0;
		LEVEL X FOR 1346.994;
	}
}

TRANSITION_LIST("Reg8bit:R2|FFstore[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("Reg8bit:R2|FFstore[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("Reg8bit:R2|FFstore[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 153.006;
		LEVEL 1 FOR 1846.994;
	}
}

TRANSITION_LIST("Reg8bit:R2|FFstore[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("Reg8bit:R2|FFstore[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("Reg8bit:R2|FFstore[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("Reg8bit:R2|FFstore[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 153.006;
		LEVEL 1 FOR 1846.994;
	}
}

TRANSITION_LIST("Reg8bit:R2|FFstore[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("Reg8bit:R3|FFstore[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("Reg8bit:R3|FFstore[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("Reg8bit:R3|FFstore[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 253.006;
		LEVEL 1 FOR 1746.994;
	}
}

TRANSITION_LIST("Reg8bit:R3|FFstore[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 253.006;
		LEVEL 1 FOR 1746.994;
	}
}

TRANSITION_LIST("Reg8bit:R3|FFstore[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("Reg8bit:R3|FFstore[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("Reg8bit:R3|FFstore[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 253.006;
		LEVEL 1 FOR 1746.994;
	}
}

TRANSITION_LIST("Reg8bit:R3|FFstore[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 253.006;
		LEVEL 1 FOR 1746.994;
	}
}

TRANSITION_LIST("RnWAcc")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("SelAcc")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 325.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 1325.0;
	}
}

TRANSITION_LIST("Accumulator:Acc|FFstore[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 553.006;
		LEVEL 1 FOR 100.0;
		LEVEL X FOR 1346.994;
	}
}

TRANSITION_LIST("Accumulator:Acc|FFstore[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 453.006;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL X FOR 1346.994;
	}
}

TRANSITION_LIST("Accumulator:Acc|FFstore[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 353.006;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 1346.994;
	}
}

TRANSITION_LIST("Accumulator:Acc|FFstore[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 453.006;
		LEVEL 1 FOR 200.0;
		LEVEL X FOR 1346.994;
	}
}

TRANSITION_LIST("Accumulator:Acc|FFstore[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 553.006;
		LEVEL 1 FOR 100.0;
		LEVEL X FOR 1346.994;
	}
}

TRANSITION_LIST("Accumulator:Acc|FFstore[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 453.006;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL X FOR 1346.994;
	}
}

TRANSITION_LIST("Accumulator:Acc|FFstore[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 353.006;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 1346.994;
	}
}

TRANSITION_LIST("Accumulator:Acc|FFstore[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 453.006;
		LEVEL 1 FOR 200.0;
		LEVEL X FOR 1346.994;
	}
}

TRANSITION_LIST("Accumulator:Acc|ResetEn")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "Clock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RnW1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RnW2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RnW3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RnWAcc";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Sel1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Sel2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Sel3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SelAcc";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
	CHILDREN = 10, 11, 12, 13, 14, 15, 16, 17;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "DioExtOut";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
	CHILDREN = 19, 20, 21, 22, 23, 24, 25, 26;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[7]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[6]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[5]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[4]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[3]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[2]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[1]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[0]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R1|FFstore";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 0;
	CHILDREN = 28, 29, 30, 31, 32, 33, 34, 35;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R1|FFstore[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R1|FFstore[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R1|FFstore[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R1|FFstore[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R1|FFstore[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R1|FFstore[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R1|FFstore[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R1|FFstore[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R2|FFstore";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 0;
	CHILDREN = 37, 38, 39, 40, 41, 42, 43, 44;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R2|FFstore[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R2|FFstore[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R2|FFstore[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R2|FFstore[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R2|FFstore[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R2|FFstore[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R2|FFstore[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R2|FFstore[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R3|FFstore";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 0;
	CHILDREN = 46, 47, 48, 49, 50, 51, 52, 53;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R3|FFstore[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R3|FFstore[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R3|FFstore[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R3|FFstore[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R3|FFstore[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R3|FFstore[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R3|FFstore[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R3|FFstore[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Accumulator:Acc|FFstore";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 0;
	CHILDREN = 55, 56, 57, 58, 59, 60, 61, 62;
}

DISPLAY_LINE
{
	CHANNEL = "Accumulator:Acc|FFstore[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Accumulator:Acc|FFstore[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Accumulator:Acc|FFstore[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Accumulator:Acc|FFstore[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Accumulator:Acc|FFstore[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Accumulator:Acc|FFstore[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Accumulator:Acc|FFstore[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Accumulator:Acc|FFstore[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Accumulator:Acc|ResetEn";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 25000;
	MASTER = TRUE;
}
;
